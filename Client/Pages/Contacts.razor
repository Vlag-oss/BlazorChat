@page "/contacts"
@using BlazorChat.Client.ViewModels
@inject IContactsViewModel ContactsViewModel
@inject NavigationManager NavigationManager

<div class="col-12">
    <div class="col-12 row">
        <input type="text" class="col-9 form-control" placeholder="search"/>
        <span>&nbsp;</span><button class="btn btn-primary">Search</button>
    </div>
    <br/>

    @if(ContactsCount > 0)
    {
        <Virtualize ItemsProvider="LoadOnlyVisibleContacts" Context="contact">
            <ItemContent>
                <div style="height: 50px;">
                    <a href="/chat/@contact.ContactId" class="list-group-item list-group-item-action flex-column align-items-start bold-text">
                        @contact.FirstName <span> </span> @contact.LastName
                    </a>
                </div>
            </ItemContent>
            <Placeholder>
                <div style="height: 50px;">
                    <p>Loading...</p>
                </div>
            </Placeholder>
        </Virtualize>
    }
</div>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }
    public int ContactsCount { get; set; }

    public async ValueTask<ItemsProviderResult<Contact>> LoadOnlyVisibleContacts(ItemsProviderRequest itemsProviderRequest)
    {
        var result = await ContactsViewModel.GetVisibleContacts(itemsProviderRequest.StartIndex, itemsProviderRequest.Count);
        return new ItemsProviderResult<Contact>(result, ContactsCount);
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationState;
        var user = authState.User;

        if (user.Identity!.IsAuthenticated)
            ContactsCount = await ContactsViewModel.GetContactsCount();
        else
            NavigationManager.NavigateTo("/");
    }
}
